<nav>
	<nav-bar>
		<nav-buttons>
		</nav-buttons>
		<nav-title>
			<component-page-title>Ready to code?</component-page-title>
		</nav-title>
		<nav-buttons>
			<a href="#logout">
				<component-logout-button />
			</a>
		</nav-buttons>
	</nav-bar>
</nav>
<component-main-content>
	<portal>
		<component-spacing height="10px" />
		<label>
			Choose a quiz!
		</label>
		<component-spacing height="20px" />
		<component-item if={ status () === 'loading' } >Fetching quizes...</component-item>
		<component-loading-item if={ status () === 'loading' } />
		<component-item if={ status () === 'no-items' } >No courses found :(</component-item>
		<component-dynamic-load
		    items_to_load=13
		    interval_for_loading=50
		    item_height={ item_height }
		    items__from={ subcategories }
		>
			<component-portal-subcategory-item item__from={ _item .item__from }>
		</component-dynamic-load>
	</portal>
	<component-spacing height="75px" />
	<links>
		<a href="#courses"><label>Courses</label></a>
		<a href="#highscore"><label>Highscore</label></a>
		<a href="#contact"><label>Contact us</label></a>
	</links>
</component-main-content>

<style>
	@extend [page-layout];
	
	/*component-page-title{
		
		font-size: 1.4em;
	
	}*/
	
	portal {
	    display: block;
	    left: 0;
	    right: 0;
	    bottom: 95px;
	    top: 0;
	    position: absolute;
	    overflow: scroll;
		
		> label {
			color: #4FABFF;
			font-weight: bold;
			font-size: 1.4em;
			display: block;
			padding: 0 10px;
		}
		
	}
	links {
		position: fixed;
		bottom: 35px;
	    left: 0;
	    right: 0;
	    opacity: 0.7;
	    display: flex;
		justify-content: space-around;
		> a {
			color: black;
			text-align: center;
		    width: 50px;
		    white-space: nowrap;
		    position: relative;
		    
		    &:before {
				content: '';
				display: block;
				margin: 0 auto;
				padding: 25px;
				background: #50abf1;
				border-radius: 10px;
			}
		    
		    > label {
			    position: absolute;
			    left: 50%;
			    transform: translateX(-50%);
			}
		}
	}

</style>

<script>
	var questions_info = stream ()
	var subcategories =	questions_info
							.thru (map, function (question_list) {
								var categories = {};
								question_list .forEach (function (question) {
									categories [question .category] = true;
								});
								return 	Object .keys (categories)
											.sort (function (a, b) {
												return a > b;
											})
											.map (function (category) {
												return { category: category };
											});
							})
							.thru (delay, 400)
							.thru (dropRepeatsWith, json_equal)
		
	var item_height = 	function (item) {
							return 135;
						}
			
	var status =	mechanism (function () {
						if (subcategories () .length)
							return 'loaded';
						else
							return 'no-items'
					}, [subcategories])
					.thru (begins_with, 'loading')
	
	status .thru (map, noop) .thru (tap, self .render)
		
	args .cycle__from
		.thru (tap, function () {
			inquire (api () .questions)
				.then (questions_info)
		})
</script>